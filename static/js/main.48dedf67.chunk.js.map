{"version":3,"sources":["profile/profile component.js","App.js","reportWebVitals.js","index.js"],"names":["Profile","props","react_default","a","createElement","fullName","children","bio","profession","onClick","e","preventDefault","alert","style","width","height","borderRadius","color","border","fontWeight","backgroundColor","defaultProps","prototypes","PropTypes","string","func","App","Fragment","margin","padding","display","justifyContent","alignContent","boxShadow","profile_component","src","alt","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"sLAIMA,EAAU,SAAAC,GAeZ,OACIC,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,uBAAeH,EAAMI,SAArB,OAECJ,EAAMK,SACPJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,kBAAUH,EAAMM,IAAhB,MAEAL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yBAAiBH,EAAMO,aAEvBN,EAAAC,EAAAC,cAAA,UAAQK,QA3BhB,SAAoBC,GAChBA,EAAEC,iBACFC,MAAM,mFAyB2BC,MAtBjB,CAChBC,MAAM,QACNC,OAAO,OACPC,aAAa,OACbC,MAAM,QACNC,OAAO,OACPC,WAAW,OACXC,gBAAgB,SAeZ,gBAOZpB,EAAQqB,aAAe,CACnBhB,SAAS,WACTE,IAAK,uBACLC,WAAa,oBAGFR,QAEfA,EAAQsB,WAAY,CAChBjB,SAASkB,IAAUC,OACnBjB,IAAKgB,IAAUC,OACfhB,WAAWe,IAAUC,OACrBf,QAAQc,IAAUE,MCtBPC,MArBf,WAYE,OACExB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACAzB,EAAAC,EAAAC,cAAA,OAAKS,MAZa,CAClBC,MAAM,QACNc,OAAO,sBACPC,QAAQ,OACRC,QAAQ,OACRC,eAAe,SACfC,aAAa,SACbC,UAAU,kCAMR/B,EAAAC,EAAAC,cAAC8B,EAAD,SAAYhC,EAAAC,EAAAC,cAAA,OAAK+B,IAAI,UAAUC,IAAI,gBAAnC,QCXSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAA9B,EAAA,GAAA+B,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDdW,IAASC,OACPhD,EAAAC,EAAAC,cAACF,EAAAC,EAAMgD,WAAP,KACEjD,EAAAC,EAAAC,cAACgD,EAAD,OAEFC,SAASC,eAAe,SAM1BjB","file":"static/js/main.48dedf67.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst Profile = props  =>{\r\n    function handleName(e) {\r\n        e.preventDefault();\r\n        alert(\"hello , my name is John Doe and you're checking my profile.. Take your time :D\");\r\n        \r\n    }\r\n    const styleButton = {\r\n        width:\"300px\",\r\n        height:\"40px\",\r\n        borderRadius:\"10px\",\r\n        color:\"white\",\r\n        border:\"none\",\r\n        fontWeight:\"bold\",\r\n        backgroundColor:\"blue\",\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n            <h3>FullName: {props.fullName}  </h3>\r\n            </div>\r\n            {props.children}\r\n            <div>\r\n            <h3>Bio: {props.bio} </h3>\r\n            </div>\r\n            <div>\r\n            <h3>Profession: {props.profession}</h3>\r\n            </div>\r\n            <button onClick={handleName} style={styleButton}>Click me !</button>\r\n        \r\n        </div>\r\n\r\n    )\r\n    \r\n};\r\nProfile.defaultProps = {\r\n    fullName:\"John Doe\" ,\r\n    bio :\"Programming , Sports\",\r\n    profession : \"Web Developement\",\r\n}\r\n\r\nexport default Profile;\r\n\r\nProfile.prototypes= {\r\n    fullName:PropTypes.string,\r\n    bio: PropTypes.string, \r\n    profession:PropTypes.string,\r\n    onClick:PropTypes.func,\r\n}\r\n\r\n\r\n","import './App.css';\nimport Profile from './profile/profile component.js';\nimport React from 'react';\n\n\n\n\n\nfunction App() {\n\n  const styleObject = {\n    width:\"500px\",\n    margin:\"10px auto 30px auto\",\n    padding:\"20px\",\n    display:\"flex\",\n    justifyContent:\"center\",\n    alignContent:\"center\",\n    boxShadow:\"0 5px 10px 2px rgba(0.0.0.25)\"\n  }\n  \n  return (\n    <>\n    <div style={styleObject}>\n      <Profile  > <img src=\"man.png\" alt=\"profile img\"/> </Profile>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}